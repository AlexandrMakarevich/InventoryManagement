<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com</groupId>
  <artifactId>InventoryManagement</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>InventoryManagement</name>

  <modules>
    <module>InventoryManagementCore</module>
    <module>InventoryManagementWeb</module>
    <module>InventoryManagementSwing</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <spring.version>5.0.0.RELEASE</spring.version>
    <jacoco.version>0.7.5.201505241946</jacoco.version>
    <slf4j.version>1.7.25</slf4j.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>

    <plugins>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <configuration>
          <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
          <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
        </configuration>
        <executions>
          <execution>
            <id>jacoco-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <phase>package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>

          <!--<execution>-->
            <!--<id>default-check</id>-->
            <!--<phase>install</phase>-->
            <!--<goals>-->
              <!--<goal>check</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
              <!--<rules>&lt;!&ndash; implementation is needed only for Maven 2 &ndash;&gt;-->
                <!--<rule implementation="org.jacoco.maven.RuleConfiguration">-->
                  <!--<element>BUNDLE</element>-->
                  <!--<limits>&lt;!&ndash; implementation is needed only for Maven 2 &ndash;&gt;-->
                    <!--<limit implementation="org.jacoco.report.check.Limit">-->
                      <!--<counter>COMPLEXITY</counter>-->
                      <!--<value>COVEREDRATIO</value>-->
                      <!--<minimum>0.6</minimum>-->
                    <!--</limit>-->
                  <!--</limits>-->
                <!--</rule>-->
              <!--</rules>-->
            <!--</configuration>-->
          <!--</execution>-->
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>

    </plugins>

  </build>

</project>